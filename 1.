1.首先是快速的完成这个Demo
关于二手交易APP列表缓存的思考：
首先是用户发布数据的时候，将这些数据上传到网络，用Volley框架。然后每次打开App并不需要都访问网络来返回数据。而是优先从本地读取。如果本地没有再去网络读取。
大致的思路文字就是存放文字，图片就存放url。对应读取。
a:关于缓存框架ASimpleCache的研究。
这个应该挺简单的，不过为了快速完成图文混排的Demo先用着不研究。
b:这个Demo的结构是
2.仔细分析Demo中的知识点
----------------------------------------------
2016年02月05日23:07:16
打算先不管服务器的东西，用尽可能真实化的模拟的方法，模拟接受到json数据以后的Android客户端的处理过程。
写完这些以后尽可能的把自己以前所学的知识整理到这个APP上，尽可能多的覆盖Android的知识而不是写服务器的知识。
-----------------------------------------------
从这里说起，首先是客户端上传图片，通过使用java的图片上传的知识写完但是最后并不会调用这个方法，而是直接拿到json对象，返回到列表上，并缓存。点击列表然后使用volley加载图片并缓存。
这里缺少，图片上传的知识
http://blog.csdn.net/qxs965266509/article/details/9224057
http://bbs.51cto.com/thread-944949-1.html
http://blog.csdn.net/u014163726/article/details/44994197#comments
http://wenku.baidu.com/link?url=64DDE4weYx6HXke66ViRfjdA0uHIkErjDHQ4nAB1lktl-5JGnHUoJ1gqhQLfocaUmGvTEUzFPxR7qbcB0BKgcdDCVHrp7kupg_PiZnfqRyG
http://www.open-open.com/lib/view/open1363597883421.html
http://my.oschina.net/u/1177694/blog/491834
http://blog.csdn.net/jxxfzgy/article/details/44064481
http://www.sxt.cn/info-6151-u-7878.html
http://www.cnblogs.com/gzggyy/archive/2011/08/02/2125237.html